@model ConstructionLK.Models.ItemRequest

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div class="col-md-7">
    <h4>ItemRequest</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Customer.Username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Customer.Username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Item.ItemName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Item.ItemName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location.Type)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ServiceProvider.Username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ServiceProvider.Username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Message)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Message)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AcceptedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AcceptedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExpDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExpDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CompletedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CompletedDate)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.StatusId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StatusId)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Latitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Longitude)
        </dd>

    </dl>
</div>
<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 600px;
        width: 600px;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        margin-top:10px;
    }
</style>
<div class="col-md-5">
    <div id="map"></div>
</div>
<script>
        function initMap() {

        var latitude = @Html.Raw(Json.Encode(ViewBag.latitude));
        var longitude = @Html.Raw(Json.Encode(ViewBag.longitude));
        var myLatLng = {"lat": latitude, "lng": longitude};
        var icon = "/Resources/Icons/pin.png";
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: myLatLng,
            styles: [
        { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
        { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
        { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
        {
            featureType: 'administrative.locality',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
        },
        {
            featureType: 'poi',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
        },
        {
            featureType: 'poi.park',
            elementType: 'geometry',
            stylers: [{ color: '#263c3f' }]
        },
        {
            featureType: 'poi.park',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#6b9a76' }]
        },
        {
            featureType: 'road',
            elementType: 'geometry',
            stylers: [{ color: '#38414e' }]
        },
        {
            featureType: 'road',
            elementType: 'geometry.stroke',
            stylers: [{ color: '#212a37' }]
        },
        {
            featureType: 'road',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#9ca5b3' }]
        },
        {
            featureType: 'road.highway',
            elementType: 'geometry',
            stylers: [{ color: '#746855' }]
        },
        {
            featureType: 'road.highway',
            elementType: 'geometry.stroke',
            stylers: [{ color: '#1f2835' }]
        },
        {
            featureType: 'road.highway',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#f3d19c' }]
        },
        {
            featureType: 'transit',
            elementType: 'geometry',
            stylers: [{ color: '#2f3948' }]
        },
        {
            featureType: 'transit.station',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
        },
        {
            featureType: 'water',
            elementType: 'geometry',
            stylers: [{ color: '#17263c' }]
        },
        {
            featureType: 'water',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#515c6d' }]
        },
        {
            featureType: 'water',
            elementType: 'labels.text.stroke',
            stylers: [{ color: '#17263c' }]
        }
            ]

        });

        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            title: 'Service Location',
            icon : icon
        });
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDNAhDrUVY2eAjlZHN_P1C1msEA_45v-XY&callback=initMap">
</script>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
