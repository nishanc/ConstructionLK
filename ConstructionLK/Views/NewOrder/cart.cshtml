@using ConstructionLK.Controllers;
@using Microsoft.Ajax.Utilities
@using Microsoft.AspNet.Identity
@model ConstructionLK.Models.Customer
@{
    ViewBag.Title = "cart";
}

<h2>cart</h2>
<html>
<head>
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>ConfirmOrder1</title>
</head>
<body>


    <table class="table table-bordered table-hover ">
        <tr class="success">
            <th>Product</th>
            <th>unit Price</th>
            <th>Quantity</th>
            <th>Sub total</th>
        </tr>

        @{ 
                double s = 0;
                
            }

            @foreach (Product product in (List<Product>)Session["cart"])
            {



           
            <tr>
                <td>@product.It.ItemName</td>
                <td>
                    @foreach (var price in @product.It.PublishedItems)
                    {
                        @price.Price
                        ViewBag.p = @price.Price;
                    }
                </td>
                <td>@product.Quantity</td>

                <td>@(ViewBag.p*product.Quantity)</td>
                <td> @Html.ActionLink("Cancel order", "cancelOrder", "NewOrder", new { id = @product.It.Id }, null )</td>
            </tr>
                s = s + ViewBag.p * product.Quantity;
            }


        <tr>
            <td></td>
            <td></td>
            <td>Total</td>
            <td>@s</td>
        </tr>

    </table>

    <br />
    @Html.ActionLink("Continue Shopping", "Index", "Items", new { id = 1 }, new { @class = "btn btn-warning" }) <button  class="btn btn-success" onclick="GetData(@s)"> Confirm Order</button> 
    <br/>
    <br />
    @*PayPal Button*@
    <div id="paypal-button"></div>
    <script>

        function callpaypal(value){
            paypal.Button.render({

                env: 'sandbox', // Or 'sandbox'

                client: {
                    // sandbox: 'Acx3MRaUyBpaOFYc_zrxHAEkf8y9Gf5bnctplaWgPzKzeBISlNoldNXbiO7awT_UoO7FrzB_MIyU8ki2',
                    sandbox: 'AUPqZNkiDZPp1yzAmCtquGGrfdaH-lNJCPp9mhYRI7LVuEBZ5dDY0H5RdrJtlWgEuwQWsZ1ST_n3x9wF',
                    //production: 'xxxxxxxxx'
                },

                commit: true, // Show a 'Pay Now' button

                style: {
                    size: 'medium',
                    color: 'gold',
                    shape: 'pill',
                    label: 'checkout'
                },

                payment: function (data, actions) {
                    return actions.payment.create({
                        payment: {
                            transactions: [
                                {
                                    amount: { total: value, currency: 'USD' }
                                }
                            ]
                        }
                    });
                },

                onAuthorize: function (data, actions) {
                    return actions.payment.execute().then(function (payment) {
                        toastr.success("payment was Successfull!")
                        // The payment is complete!
                        // You can now show a confirmation message to the customer
                    });
                },

                onCancel: function (data, actions) {
                    toastr.warning("Payment was canceled!")
                },

                onError: function (err) {
                    toastr.warning("Something went wrong!")
                    /*
                     * An error occurred during the transaction
                     */
                }

            }, '#paypal-button');

        }

        function GetData(a) {
           // alert("Called")
            $.ajax({
                type: 'GET',
                url: "https://apilayer.net/api/live?access_key=b7702aa5f4fc438e52bc53c6258faa24&currencies=LKR&source=USD&format=1",
                success: function (data) {
                    
                    var rest = a/150;
                    var rest2 = rest.toFixed(2);
                    var rest3 = rest2.toString();
                    //alert(typeof rest3);
                  
                    callpaypal(rest3);
                },
                error: function (a, jqXHR, exception) { alert("error in GetData") }


            });



        }


    </script>
</body>
</html>




